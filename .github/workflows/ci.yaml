name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'

jobs:

  lint:
    name: Lint JS & PHP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get correct Node version
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Configure npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup PHP with Xdebug 2.x
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          coverage: xdebug2

      - name: Install Node dependencies
        run: npm install

      - name: Detect coding standard violations
        run: npm run lint

  test:
    name: Unit test JS & PHP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get correct Node version
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Configure npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup PHP with Xdebug 2.x
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          coverage: xdebug2

      - name: Install Node dependencies
        run: npm install

      - name: Run unit tests (with coverage)
        run: npm run test:coverage

      - name: Run Coveralls for JS
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: './tests/coverage/js/lcov.info'
          flag-name: run-js
          parallel: true

      - name: Run Coveralls for PHP
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: run-php
        run: composer coverage

  finish:
    name: Finish parallel tests
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
